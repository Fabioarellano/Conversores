/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package conversores;

import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Fabio
 */
public class FrmMainWindow extends javax.swing.JFrame {

    /**
     * Creates new form FrmMainWindow
     */
    public FrmMainWindow() {
        initComponents();
        jPanelSeleccionConversor.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrupoConversor = new javax.swing.ButtonGroup();
        jButtonSalir = new javax.swing.JButton();
        jPanelConversor = new javax.swing.JPanel();
        jrButtonMoneda = new javax.swing.JRadioButton();
        jrButtonTemperatura = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jPanelSeleccionConversor = new javax.swing.JPanel();
        listaMonedas = new javax.swing.JComboBox<>();
        txtValorAConvertir = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblValorConvertido = new javax.swing.JLabel();
        btnConvertir = new javax.swing.JButton();
        lblmonedaOrigen = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanelConversorTemp = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lblConversionTemp = new javax.swing.JLabel();
        lblTempOrigen = new javax.swing.JLabel();
        btnConversorTemp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conversor");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButtonSalir.setText("Salir");
        jButtonSalir.setToolTipText("Terminar la aplicación");
        jButtonSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jPanelConversor.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnGrupoConversor.add(jrButtonMoneda);
        jrButtonMoneda.setText("Monedas");
        jrButtonMoneda.setToolTipText("Conversor de moneda");
        jrButtonMoneda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jrButtonMoneda.setName(""); // NOI18N
        jrButtonMoneda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrButtonMonedaActionPerformed(evt);
            }
        });

        btnGrupoConversor.add(jrButtonTemperatura);
        jrButtonTemperatura.setText("Temperatura");
        jrButtonTemperatura.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jrButtonTemperatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrButtonTemperaturaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Conversores:");

        javax.swing.GroupLayout jPanelConversorLayout = new javax.swing.GroupLayout(jPanelConversor);
        jPanelConversor.setLayout(jPanelConversorLayout);
        jPanelConversorLayout.setHorizontalGroup(
            jPanelConversorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConversorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConversorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrButtonTemperatura)
                    .addComponent(jLabel1)
                    .addComponent(jrButtonMoneda))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanelConversorLayout.setVerticalGroup(
            jPanelConversorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConversorLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jrButtonMoneda)
                .addGap(18, 18, 18)
                .addComponent(jrButtonTemperatura)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelSeleccionConversor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()));

        listaMonedas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "De Pesos a Dólar", "De Pesos a Euros", "De Pesos a Libras", "De Pesos a Yen", "De Pesos a Won Coreano", "De Dólar a Pesos", "De Euros a Pesos", "De Libras a Pesos", "De Yen a Pesos", "De Won Coreano a Pesos" }));
        listaMonedas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        listaMonedas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaMonedasActionPerformed(evt);
            }
        });

        txtValorAConvertir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Valor:");

        lblValorConvertido.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblValorConvertido.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        btnConvertir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnConvertir.setText("Convertir");
        btnConvertir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertirActionPerformed(evt);
            }
        });

        lblmonedaOrigen.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("=>");

        javax.swing.GroupLayout jPanelSeleccionConversorLayout = new javax.swing.GroupLayout(jPanelSeleccionConversor);
        jPanelSeleccionConversor.setLayout(jPanelSeleccionConversorLayout);
        jPanelSeleccionConversorLayout.setHorizontalGroup(
            jPanelSeleccionConversorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSeleccionConversorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSeleccionConversorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listaMonedas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelSeleccionConversorLayout.createSequentialGroup()
                        .addGroup(jPanelSeleccionConversorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelSeleccionConversorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblValorConvertido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanelSeleccionConversorLayout.createSequentialGroup()
                                .addComponent(txtValorAConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblmonedaOrigen, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(jPanelSeleccionConversorLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(btnConvertir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelSeleccionConversorLayout.setVerticalGroup(
            jPanelSeleccionConversorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSeleccionConversorLayout.createSequentialGroup()
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(listaMonedas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelSeleccionConversorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelSeleccionConversorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtValorAConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblmonedaOrigen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanelSeleccionConversorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSeleccionConversorLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblValorConvertido, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelSeleccionConversorLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanelConversorTemp.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelConversorTemp.setName(""); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "De Celsius a Fahrenheit", "De Celsius a Kelvin", "De Fahrenheit a Celsius", "De Fahrenheit a Kelvin", "De Kelvin a Celsius", "De Kelvin a Fahrenheit" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Valor:");

        jLabel5.setText("=>");

        btnConversorTemp.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnConversorTemp.setText("Convertir");
        btnConversorTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConversorTempActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelConversorTempLayout = new javax.swing.GroupLayout(jPanelConversorTemp);
        jPanelConversorTemp.setLayout(jPanelConversorTempLayout);
        jPanelConversorTempLayout.setHorizontalGroup(
            jPanelConversorTempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConversorTempLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConversorTempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, 0, 293, Short.MAX_VALUE)
                    .addGroup(jPanelConversorTempLayout.createSequentialGroup()
                        .addGroup(jPanelConversorTempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelConversorTempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtValor, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(lblConversionTemp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTempOrigen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanelConversorTempLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(btnConversorTemp)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelConversorTempLayout.setVerticalGroup(
            jPanelConversorTempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConversorTempLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelConversorTempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConversorTempLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel3))
                    .addGroup(jPanelConversorTempLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanelConversorTempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTempOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanelConversorTempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConversorTempLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel5))
                    .addGroup(jPanelConversorTempLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblConversionTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(btnConversorTemp)
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSalir)
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanelConversor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelConversorTemp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelSeleccionConversor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonSalir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelConversor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelSeleccionConversor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelConversorTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jrButtonTemperaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrButtonTemperaturaActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Selecciono opcion " + jrButtonTemperatura.getText());
        jPanelSeleccionConversor.setVisible(false);
    }//GEN-LAST:event_jrButtonTemperaturaActionPerformed

    private void jrButtonMonedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrButtonMonedaActionPerformed
        // TODO add your handling code here:
        jPanelSeleccionConversor.setVisible(true);
        JOptionPane.showMessageDialog(null, "Selecciono opcion " + jrButtonMoneda.getText());
    }//GEN-LAST:event_jrButtonMonedaActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void listaMonedasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaMonedasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listaMonedasActionPerformed

    private void btnConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertirActionPerformed
        // TODO add your handling code here:

        // 1 dolar => 4825,40.
        if (validar(txtValorAConvertir.getText())) {
            double monedaDolar = Double.parseDouble(txtValorAConvertir.getText());
            //monedaDolar = (double)Math.round(((monedaDolar/4825.40)*100d)/100);
            monedaDolar = monedaDolar / 4825.40;
            System.out.println(monedaDolar);

            //String valor = String.valueOf(monedaDolar);
            lblValorConvertido.setText(String.format("%.2f", monedaDolar));
            System.out.println("conversion actual " + listaMonedas.getSelectedItem());
            String cad = (String) listaMonedas.getSelectedItem();
            System.out.println("cadena " + cad.substring(3, 9));
            int s = cad.substring(3, 10).indexOf(cad.substring(3, 10));
            System.out.println("sss " + s);
            conversion(cad);
        } else {

            JOptionPane.showMessageDialog(null, "Debe ingresar datos numericos");
            txtValorAConvertir.requestFocus();
        }

    }//GEN-LAST:event_btnConvertirActionPerformed

    private void btnConversorTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConversorTempActionPerformed
        // TODO add your handling code here:
        //celsius a farengeith
        //(ºC * 1.8) + 32
        Double Fahrenheit = Double.parseDouble(txtValor.getText());
        Fahrenheit = (Fahrenheit * 1.8) + 32;
        lblConversionTemp.setText(String.format("%.2f", Fahrenheit));

    }//GEN-LAST:event_btnConversorTempActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConversorTemp;
    private javax.swing.JButton btnConvertir;
    private javax.swing.ButtonGroup btnGrupoConversor;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanelConversor;
    private javax.swing.JPanel jPanelConversorTemp;
    private javax.swing.JPanel jPanelSeleccionConversor;
    private javax.swing.JRadioButton jrButtonMoneda;
    private javax.swing.JRadioButton jrButtonTemperatura;
    private javax.swing.JLabel lblConversionTemp;
    private javax.swing.JLabel lblTempOrigen;
    private javax.swing.JLabel lblValorConvertido;
    private javax.swing.JLabel lblmonedaOrigen;
    private javax.swing.JComboBox<String> listaMonedas;
    private javax.swing.JTextField txtValor;
    private javax.swing.JTextField txtValorAConvertir;
    // End of variables declaration//GEN-END:variables

    public void conversion(String cadena) {

        switch (cadena) {
            case "De Pesos a Dólar":
                System.out.println("Pesos a dolares");
                // 1 dolar => 4825,40. tasa de cambio a 11 de dic 2022
                //ConvertirMonedaDestino(4825.87);
                //lblValorConvertido.setText(String.format("%.2f", ConvertirMonedaDestino(4825.87)));
                lblmonedaOrigen.setText("Peso(s)");
                if (validar(txtValorAConvertir.getText())) {
                    imprimirCambioMoneda(convertirMonedaDestino(4825.87, 'd'), "Dolar(es)");
                } else {
                    System.out.println("Erroooooo");
                }

                break;
            case "De Pesos a Euros":
                System.out.println("Pesos a Euros");
                //ConvertirMonedaDestino(5087.19);
                lblmonedaOrigen.setText("Peso(s)");
                imprimirCambioMoneda(convertirMonedaDestino(5087.19, 'd'), "Euro(s)");
                //lblValorConvertido.setText(String.format("%.2f", ConvertirMonedaDestino(5087.19)));
                break;
            case "De Pesos a Libras":
                System.out.println("Pesos a Libras");
                //ConvertirMonedaDestino(5087.19);
                lblmonedaOrigen.setText("Peso(s)");
                imprimirCambioMoneda(convertirMonedaDestino(5915.30, 'd'), "Libra(s)");
                //lblValorConvertido.setText(String.format("%.2f", ConvertirMonedaDestino(5087.19)));
                break;

            case "De Pesos a Yen":
                System.out.println("Pesos a Yen");
                //ConvertirMonedaDestino(5087.19);
                lblmonedaOrigen.setText("Peso(s)");
                imprimirCambioMoneda(convertirMonedaDestino(35.33, 'd'), "Yen(es)");
                //lblValorConvertido.setText(String.format("%.2f", ConvertirMonedaDestino(5087.19)));
                break;
            case "De Pesos a Won Coreano":
                System.out.println("Pesos a Won Coreano");
                //ConvertirMonedaDestino(5087.19);
                lblmonedaOrigen.setText("Peso(s)");
                imprimirCambioMoneda(convertirMonedaDestino(3.70, 'd'), "Won Coreano(s)");
                //lblValorConvertido.setText(String.format("%.2f", ConvertirMonedaDestino(5087.19)));
                break;
            case "De Dólar a Pesos":
                System.out.println("Dólar a Pesos");
                //ConvertirMonedaDestino(5087.19);
                lblmonedaOrigen.setText("Dólar(es)");
                imprimirCambioMoneda(convertirMonedaDestino(4825.87, 'm'), "Peso(s)");
                //lblValorConvertido.setText(String.format("%.2f", ConvertirMonedaDestino(5087.19)));
                break;
            case "De Euros a Pesos":
                System.out.println("Euros a Pesos");
                //ConvertirMonedaDestino(5087.19);
                lblmonedaOrigen.setText("Euro(s)");
                imprimirCambioMoneda(convertirMonedaDestino(5087.19, 'm'), "Peso(s)");
                //lblValorConvertido.setText(String.format("%.2f", ConvertirMonedaDestino(5087.19)));
                break;
            case "De Libras a Pesos":
                System.out.println("Libras a Pesos");
                //ConvertirMonedaDestino(5087.19);
                lblmonedaOrigen.setText("Libra(s)");
                imprimirCambioMoneda(convertirMonedaDestino(5915.30, 'm'), "Peso(s)");
                //lblValorConvertido.setText(String.format("%.2f", ConvertirMonedaDestino(5087.19)));
                break;
            case "De Yen a Pesos":
                System.out.println("Yen a Pesos");
                //ConvertirMonedaDestino(5087.19);
                lblmonedaOrigen.setText("Yen(es)");
                imprimirCambioMoneda(convertirMonedaDestino(35.33, 'm'), "Peso(s)");
                //lblValorConvertido.setText(String.format("%.2f", ConvertirMonedaDestino(5087.19)));
                break;
            case "De Won Coreano a Pesos":
                System.out.println("Won Coreano a Pesos");
                //ConvertirMonedaDestino(5087.19);
                lblmonedaOrigen.setText("Won Coreano");
                imprimirCambioMoneda(convertirMonedaDestino(3.70, 'm'), "Peso(s)");
                //lblValorConvertido.setText(String.format("%.2f", ConvertirMonedaDestino(5087.19)));
                break;
            default:
                //throw new AssertionError();
                JOptionPane.showMessageDialog(null, "Conversion de moneda no implementada");
        }
    }

    public double convertirMonedaDestino(double valorConversion, char operacion) {
        double conversionMoneda = Double.parseDouble(txtValorAConvertir.getText());
        //monedaDolar = (double)Math.round(((monedaDolar/4825.40)*100d)/100);
        //de pesos a dolars, euros, yen...
        if (operacion == 'd') {//d: dividir
            conversionMoneda = conversionMoneda / valorConversion;
        } else {
            //implementar de //de dolars, euros, yen.... a Pesos
            //multiplica
            conversionMoneda = conversionMoneda * valorConversion;
        }

        return conversionMoneda;
    }
    //imprimir moneda
    public void imprimirCambioMoneda(double nuevoValorMoneda, String strMoneda) {
        lblValorConvertido.setText(String.format("%.2f", nuevoValorMoneda) + " " + strMoneda);
    }
    //imprimir temp
    public void imprimirCambioTemperatura(double nuevoValorTemp, String strTemp) {
        lblValorConvertido.setText(String.format("%.2f", nuevoValorTemp) + " " + strTemp);
    }

    public boolean validar(String cad) {

//        if (cad.matches("[0-9]*")) {
//            System.out.println("Ok");
//            return true;
//        }
//        else{
//                 System.out.println("Error");
//               return false;
//        }
        return cad.matches("[0-9]*");
    }

    //conversion de Temperatura
    public void conversionTemp(String cadena) {
        switch (cadena) {
            case "De Celsius a Fahrenheit":
                //celsius a farengeith
                //(ºC * 1.8) + 32
                Double celsius = Double.parseDouble(txtValor.getText());
                celsius = (celsius * 1.8) + 32;
                lblConversionTemp.setText(String.format("%.2f", celsius));
                break;
            case "De Celsius a Kelvin":
                //ºC + 273.15
                celsius = Double.parseDouble(txtValor.getText());
                celsius = celsius + 273.15;
                lblConversionTemp.setText(String.format("%.2f", Fahrenheit));
                break;
            case "De Fahrenheit a Celsius":
                break;
            case "De Fahrenheit a Kelvin":
                break;
            case "De Kelvin a Celsius":
                break;
            case "De Kelvin a Fahrenheit":
                break;
            default:
                throw new AssertionError();
        }
    }
}
